.tagSelector h1{color:#0c0; font-size:20px;}
.tagSelector p{color:#0cf; font-size:15px;}
.tagSelector span{color:#336; font-size:13px;}

/*태그선택자 사용법*/

.idSelector p#paragraph1{font-size:16px; text-decoration:underline;}
.idSelector p#paragraph2{color:#09F; text-decoration:line-through;}
.idSelector p#paragraph3{font-weight:bold; text-decoration:overline;}

/*ID선택자 사용법*/

.classSelector p.f_size{font-size:20px;}
.classSelector p.f_weight{font-weight:bold;}
.classSelector p.f_color{color:#9cf;}

/*CLASS 선택자 사용법 + 다중 클래스 지정 */

.attrSelector fieldset{
    border: 1px solid #555; background-color: lightseagreen;
}
.attrSelector fieldset legend{
    border: 1px solid slateblue; background-color: #555; color: white; padding: 10px;
    border-radius: 10px 0 10px;
}
.attrSelector fieldset ul{
    margin: 0; padding: 0; list-style: none;
}
.attrSelector fieldset ul li{
    color: white; font-size: 14px; line-height: 30px; margin-bottom: 10px;
}
.attrSelector fieldset ul li label{
    width: 100px; display: inline-block;
}
.attrSelector fieldset ul li input{
    padding: 5px; vertical-align: middle;
}
.attrSelector fieldset ul li input[type='text']{
    background-color: salmon; border: 3px solid lightyellow; color: maroon;
}
/* password, radio, checkbox type에 각 배웠던 css 넣어보기 */
.attrSelector fieldset ul li input[type='password']{
    background-color: limegreen; border: 3px solid lime;
}
.attrSelector fieldset ul li input[type='radio']{
    /* background-color: black; border: 5px solid yellow; */
    accent-color: red; width: 30px; height: 30px;
}
.attrSelector fieldset ul li input[type='checkbox']{
    background-color: black; border: 5px solid yellowgreen;
}
.directSelector > h1{
    font-size: 28px; color: #66f; line-height: 44px;
}
.directSelector > span{
    font-size: 22px; color: #906; line-height: 40px;
}
.directSelector ul li{
    color: limegreen;
}
.directSelector ul > li{
    font-size: 25px;
}
.directSelector ul > li ol li{
    font-size: 15px; background-color: lightgray;
}
.directSelector ul > li ol li a{
    color: forestgreen;
}
/* 
    ? 직계선택자 >
    * 구조적으로 다른 동일 태그를 제외하고 직계 자손 태그에 동일한 스타일을 적용 할 수 있다.
*/
.sameSelector h1~h2{
    background-color: #999;
}
.sameSelector h1+h2{
    font-size: 40px; color: deeppink;
}
/* 
    ? 동위선택자
    * A ~ B : A 동위선상 내 뒤에있는 모든 B를 선택. (최초 기준이 되는 tag만 효력발생)
    * A + B : A 동위선생 내 바로 뒤에있는 B를 선택. (매 기준이 변경 됨)
*/

.stringAttrSelector img[src$='png']{
    width: 100px; border: 3px solid red;
}
/* todo 남은 img두장에 넣고싶은 css 넣어보기 (문자유형별선택자사용) */
.stringAttrSelector img[src$='jpg']{
    width: 200px; border: 5px dashed green;
}
.stringAttrSelector img[src$='gif']{
    width: 300px; border: 10px double blue;
}
.stringAttrSelector h1[title*='제목']{
    color: red;
}
.stringAttrSelector h1[title^="남자"]{
    color: blue;
}
.stringAttrSelector h1[title|="탈의실"]{
    text-decoration: underline;
}
/* 
    ? 문자유형일치선택자.- 해당 문자열 유형으로 분리 적용
    * *= : 해당 단어가 들어가는 모든 대상 선택. (전,후 상관없음.)
    * ^= : 해당 단어로 시작하는 대상 선택.
    * $= : 해당 단어로 끝나는 대상 선택.
    * |= : 해당 단어로 시작하거나 -로 구분되는 대상 선택.
    * ~= : 띄어쓰기 기준. 해당 대상 선택.
*/