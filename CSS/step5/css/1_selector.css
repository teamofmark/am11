
.tagSelector h1{color:#0c0; font-size:20px;}
.tagSelector p{color:#0cf; font-size:15px;}
.tagSelector span{color:#336; font-size:13px;}

/*태그선택자 사용법*/

.idSelector p#paragraph1{font-size:16px; text-decoration:underline;}
.idSelector p#paragraph2{color:#09F; text-decoration:line-through;}
.idSelector p#paragraph3{font-weight:bold; text-decoration:overline;}

/*ID선택자 사용법*/

.classSelector p.f_size{font-size:20px;}
.classSelector p.f_weight{font-weight:bold;}
.classSelector p.f_color{color:#9cf;}

/*CLASS 선택자 사용법 + 다중 클래스 지정 */

.attrSelector fieldset{
    border: 1px solid #555; background-color: slateblue; border-radius: 10px;
}
.attrSelector fieldset legend{
    border: 1px solid slateblue; background-color: #555; color: white;
    padding: 10px; border-radius: 10px;
}
.attrSelector fieldset ul{
    margin: 0; padding: 0; list-style: none;
}
.attrSelector fieldset ul li{
    font-size: 14px; color: white; line-height: 30px;
}
.attrSelector fieldset ul li label{
    width: 100px; display: inline-block;
}
.attrSelector fieldset ul li input{
    padding: 5px;
    /* ! type checkbox, radio는 css속성이 잘 들어가지 않는다. */
}
.attrSelector fieldset ul li input[type='text']{
    /* ? = -> 같다.(x) 대입(o ? a = b -> a에 b를 대입하라.) / (같다 ==) */
    background-color: salmon; border: 3px solid lightyellow; color: maroon;
}
.attrSelector fieldset ul li input[type='password']{
    background-color: lightgreen; border: 3px solid lime;
}
.attrSelector fieldset ul li input[type='password']:focus{
    background-color: lime; color: forestgreen; font-weight: bold;
    border-color: lightgreen;
}
.attrSelector fieldset ul li input[type='radio']{
    width: 25px; height: 25px;
    background-color: fuchsia; border: 5px solid lightcoral;
}
.attrSelector fieldset ul li input[type='checkbox']{
    width: 25px; height: 25px;
    background-color: darkblue; border: 5px solid blue;
}
/* ? attrSelector */

.directSelector > h1{
    font-size: 28px; color: #66f;
}
.directSelector > span{
    font-size: 22px; color: #906; line-height: 40px;
}

.sameSelector h1~h2{
    background-color: #333; color: white;
}
.sameSelector h1+h2{
    font-size: 40px; color: deeppink;
}

.stringAttrSelector img[src$='png']{
    width: 100px; border: 3px solid red;
}
.stringAttrSelector img[src$='jpg']{
    width: 200px; border: 5px solid green;
}
.stringAttrSelector img[src$='gif']{
    width: 300px; border: 10px solid blue;
}
.stringAttrSelector h1[title*='제목']{
    color: red;
}
.stringAttrSelector h1[title^='남자']{
    color: blue;
}
.stringAttrSelector h1[title|='탈의실']{
    color: pink;
}
/* 
    ? $= -> 뒤가 일치하는 경우.
    ? ^= -> 앞이 일치하는 경우.
    ? *= -> 위치 상관없이 
    * |= -> 해당 단어로 시작하거나 - 로 구분되는 경우.
    * ~= -> 띄어쓰기 기준 해당단어 포함되는 경우.
*/

.eventSelector a{
    display: block; margin-bottom: 30px; text-align: center; font-size: 14px;
    line-height: 40px;
}
.eventSelector a:link{ /* ? 대상:link가 걸린 상태 = href attr을 지닌 상태. */
    color: red; background-color: black; text-decoration: none;
}
.eventSelector a:hover{ /* ? 대상: mouse cursor가 올라간 상태. */
    color: black; background-color: red; text-decoration: underline;
}
.eventSelector a:active{ /* ? 대상:click이 일어났을때*/
    color: red; background-color: white; text-decoration: line-through;
}
.eventSelector a:visited{ /* ? 대상:을 방문한 적이 있는 상태*/
    color: gray; background-color: white;
    /* border: 1px solid gray; */
}
.eventSelector a:focus{ /* ? 대상:에 초점이 맞춰진 상태.*/
    border: 3px solid deeppink;
}




.statusSelector input[type='checkbox'] + label{
    display: inline-block; overflow: hidden; line-height: 20px; color: deeppink;
    transition-duration: 0.75s;
}

.statusSelector input[type='checkbox']:checked + label{
    line-height: 0px;
}
.statusSelector input:enabled{
    background-color: black; color: white;
}
.statusSelector input:enabled::placeholder{
    color: yellow;
}
.statusSelector input:disabled{
    background-color: lightgray; color:gray;
}
.statusSelector input:disabled::placeholder{
    color:white;
}
/* ! select option check -> selected */
.virtualSelector ul{
    padding: 0; margin: 50px 0; list-style: none;
}
.virtualSelector ul:after{
    content: ''; display: block; clear: both;
}
.virtualSelector ul li{
    width: 14.28%; box-sizing: border-box; margin: 0; padding: 15px;
    float: left; text-align: center;
}
.virtualSelector ul li:nth-child(2n+1){
    background-color: #444; color: white;
}
.virtualSelector ul li:nth-child(2n){
    background-color: #09f; color: black;
}
/* .shapeSelector h1:nth-of-type(2){color: #30f;}
.shapeSelector h2:first-of-type{color:#0c6;}
.shapeSelector h3:last-of-type{color: #f06;} */
/* todo. child 로 같은결과 나오게 해보기. */
.shapeSelector :last-child{color:#30f;}
.shapeSelector :nth-child(2){color: #0c6;}
.shapeSelector :nth-child(4){color: #f06;}
/*
    * first-of-type, last-of-type은 형제 관계중 첫 번째 혹은 마지막으로 
    * 등장하는 지정된 태그를 선택마지막으로 등장하는 특정 태그를 선택한다.
    * nth-child와 마찬가지로 수열을 사용 할 수 있다.
    * 또한 전체선택자인 * 와 혼용하여 body > *:first-of-type{color:red} 이런식의 범위 지정도
    * 가능하다.
*/