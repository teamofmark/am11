
.tagSelector h1{color:#0c0; font-size:20px;}
.tagSelector p{color:#0cf; font-size:15px;}
.tagSelector span{color:#336; font-size:13px;}

/*태그선택자 사용법*/

.idSelector p#paragraph1{font-size:16px; text-decoration:underline;}
.idSelector p#paragraph2{color:#09F; text-decoration:line-through;}
.idSelector p#paragraph3{font-weight:bold; text-decoration:overline;}

/*ID선택자 사용법*/

.classSelector p.f_size{font-size:20px;}
.classSelector p.f_weight{font-weight:bold;}
.classSelector p.f_color{color:#9cf;}

/*CLASS 선택자 사용법 + 다중 클래스 지정 */

.attrSelector fieldset{
    border: 1px solid #555; background-color: slateblue;
    border-radius: 30px 0 30px;
}
.attrSelector fieldset legend{
    border: 1px solid slateblue; background-color: #555; color: white;
    padding: 10px; border-radius: 10px 0 10px;
}
.attrSelector fieldset ul{
    margin: 0; padding: 0; list-style: none;
}
.attrSelector fieldset ul li{
    font-size: 14px; color: white; line-height: 30px;
}
.attrSelector fieldset ul li label:not([for$='Ex']){
    width: 100px; display: inline-block;
}
.attrSelector fieldset ul li input[type="text"]{
    background-color: salmon; border: 3px solid lightpink; color: maroon;
}
.attrSelector fieldset ul li input[type="password"]{
    background-color: lightgreen; border: 3px solid lime; color: forestgreen;
}
.attrSelector fieldset ul li input[type='radio']{
    background-color: black; border: 5px solid yellow;
}
.attrSelector fieldset ul li input[type='checkbox']{
    background-color: black; border: 5px solid yellowgreen;
}
.directSelector > h1{
    font-size: 22px; color: #66f;
}
.directSelector > span{
    font-size: 18px; color: #906;
}
.sameSelector h1~h2{
    background-color: #333;
}
.sameSelector h1+h2{
    font-size: 40px; color: #fcf;
}
.stringAttrSelector img[src$='png']{
    width: 100px; border: 3px solid red;
}
.stringAttrSelector img[src$='jpg']{
    width: 200px; border: 5px solid green;
}
.stringAttrSelector img[src$='gif']{
    width: 300px; border: 10px solid blue;
}
.stringAttrSelector h1[title*='제목']{
    color: red;
}
.stringAttrSelector h1[title^="남자"]{
    color: blue;
}
.stringAttrSelector h1[title|="탈의실"]{
    color: deeppink;
}
.eventSelector{
    margin-bottom: 50px;
}
.eventSelector a{
    display: block; margin-bottom: 20px;
}
.eventSelector a:link{ /* ? 대상:link가 걸린 상태 = href attr을 지닌 상태. */
    color: red; background-color: black; text-decoration: none;
}
.eventSelector a:hover{ /* ? 대상: mouse cursor가 올라간 상태. */
    color: black; background-color: red; text-decoration: underline;
}
.eventSelector a:active{ /* ? 대상:click이 일어났을때*/
    color: red; background-color: white; text-decoration: line-through;
}
.eventSelector a:visited{ /* ? 대상:을 방문한 적이 있는 상태 / 배경은 cursor를 올렸을 때 / 기존 선행속성들 영향을 받음*/
    color: gray; background-color: white;
    /* border: 1px solid gray; */
}
.eventSelector a:focus{ /* ? 대상: 에 초점이 맞춰진 상태*/
    border: 5px solid deeppink;
}
.statusSelector input[type='checkbox'] + label{
    line-height: 20px; display: inline-block; transition: all .75s ease-out;
    overflow: hidden;
}
.statusSelector input[type='checkbox']:checked + label{
    line-height: 0px;
    /* font-size: 0px; */
}
/* ! select Tag -> :selected */
.statusSelector input:enabled::placeholder{
    /* ? input default - disabled -> enabled 로 변경되었을때 상황  */
    background-color: black; color: white;
}
.statusSelector input:disabled{
    /* 
        ! readonly <=> disabled : 혼동해서 사용하면 안됨.
        ? 1. readonly : 읽기전용. server에서 값을 전달받은 상태에서 수정이 불가능한 상황.
        ? 2. disabled : 비활성화. server에 값을 전달한 적이 없는 불가능한 상태.
    */
    background-color: lightgray; color: darkgray;
}
.virtualSelector ul{
    list-style: none; margin: 30px 0; padding: 0; overflow: hidden;
    background-color: lightgoldenrodyellow;
}
.virtualSelector ul li{
    width: 14.28%; box-sizing: border-box; padding: 15px; float: left;
}
.virtualSelector ul li:first-child{
    border-radius: 30px 0 0 30px;
}
.virtualSelector ul li:last-child{
    border-radius: 0 30px 30px 0;
}
.virtualSelector ul li:nth-child(2n+1){
    /* ! 2n+1 -> odd / 2n -> even */
    background-color: #444; color: #fff;
}
.virtualSelector ul li:nth-child(2n){
    background-color: #09f;
}