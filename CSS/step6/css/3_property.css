body{
    margin: 0; padding: 0;
}

div{
    margin-bottom: 30px;
}
.displayProperty span:nth-child(1){
    display: block; width: 50%;
    background-color: #fc9393;
}
.displayProperty span:nth-child(2){
    display: inline-block; background-color: #94fc93;
    /* padding: 30px; margin: 30px; */ width: 25%;
}
.displayProperty span:nth-child(3){
    display: inline; width: 75%; background-color: #93c5fc;
    /* padding: 30px; margin: 30px; */
}
.displayProperty span:nth-child(4){
    display: none;
}
/*
    ? display의 속성은 총 4가지
    * block = block이 되게 되면 width:100%의 값을 갖는 위에서 아래로 나열되는 객체가 된다.
    * inline-block = inline-block이 되면 width의 값을 가질수 있고, inline 타입으로 (옆으로) 나열되는 객체가 된다.
    * inline = inline이 되면 width등의 크기나 간격 등의 값을 가질수 없고 옆으로는 나열 되지만, 간격을 벌릴수 없는 객체가 된다.
    * none = 객체가 보이지 않는다. (렌더 자체가 안된다.)
*/
.visibilityProperty span{
    background-color: #ff6a00; display: block;
    border: 1px solid blue;
}
.visibilityProperty span:first-child{
    visibility: visible;
}
.visibilityProperty span:nth-child(2){
    height: 500px; visibility: hidden;
}
.visibilityProperty input[type='checkbox']:checked ~ table{
    visibility: visible;
}
.visibilityProperty table{
    visibility: collapse;
}
/* 
    ?visibility
    * visible = 보여주다.
    * hidden = 감추다.(영역보존? render는됨)
    * collapse = table만 감추다.
*/
.opacityProperty ul:after{
    content: ''; display: block; visibility: hidden; clear: both;
}
.opacityProperty ul li{
    display: block; float: left; width: 33%; background-color: black;
    position: relative;
}
.opacityProperty ul li:not(:first-child){
    margin-left: 0.5%;
}
.opacityProperty ul li figure{
    margin: 0;
}
.opacityProperty ul li figure img{
    width: 100%; opacity: 0.3; transition-duration: 0.75s;
}
.opacityProperty ul li:hover figure img{
    opacity: 1;
} 
.opacityProperty ul li:hover figure figcaption{
    /* display: none; */
    opacity: 0;
}
.opacityProperty ul li figure figcaption{
    position: absolute; width: 50%;  height: 50%; left: 25%; top: 25%;
    background-color: rgba(255,255,255,0.5); text-align: center; opacity: 1;
    transition: opacity 0.75s ease-in-out;
}
.opacityProperty ul li figure figcaption dl dt{
    font-size: 18px; font-weight: bold; margin-bottom: 30px;
}
.opacityProperty ul li figure figcaption dl dd{
    font-size: 14px; color: #444; margin: 0;
}

.boxsizingProperty div{
    width: 500px; margin: 0 auto; border: 10px solid #ff6a00;
    background-color: #fc9393; padding: 50px;
}
.boxsizingProperty div:first-child{
    box-sizing: content-box;
}
.boxsizingProperty div:last-child{
    box-sizing: border-box;
}

.shadowProperty h1{
    text-shadow: 2px 2px 3px rgba(0,0,0,0.5);
}
/* H / V / B / C */
.shadowProperty p{
    width: 300px; height: 300px;
}
.shadowProperty p:first-of-type{
    box-shadow: 5px 5px 8px 0px rgba(0,0,0,0.5);
}
.shadowProperty p:last-of-type{
    box-shadow: inset 5px 5px 8px 0px rgba(0,0,0,0.5);
}
/* H / V / B / S(선택적) / C */