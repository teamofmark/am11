body{
    width: 200px; margin: 200px auto;
}
div{
    width: 200px;
}
div span{
    width: 200px; height: 200px; display: block;
    animation-iteration-count: infinite;
    animation-duration: 3s;
    animation-timing-function: ease;
    transform-style: preserve-3d;
}
div.rotater span:nth-of-type(1){background-color: palevioletred; animation-name: hori;}
div.rotater span:nth-of-type(2){background-color: palegreen; animation-name: verti;}
div.rotater span:nth-of-type(3){background-color: paleturquoise; animation-name: depth;}
div.rotater span:nth-of-type(4){background-color: palegoldenrod; animation-name: rotate3D;}
@keyframes hori{
    0%{
        transform: rotateX(0deg);
    }100%{
        transform: rotateX(360deg);
    }
}
@keyframes verti{
    0%{
        transform: rotateY(0deg);
    }100%{
        transform: rotateY(360deg);
    }
}
@keyframes depth{
    0%{
        transform: rotateZ(0deg);
    }100%{
        transform: rotateZ(360deg);
    }
}
@keyframes rotate3D{
    0%{
        transform: rotate3d(0,0,0,0deg);
    }100%{
        transform: rotate3d(1,1,1,360deg);
    }
}

div.translater span{
    background-color: lightgray; animation-name: trans3D;
}
@keyframes trans3D{
    0%{
        transform: rotate3d(0,0,0,0deg) translate3d(0px,0px,0px) scale3d(0,0,0);
    }100%{
        transform: rotate3d(1,1,1,360deg) translate3d(100px,100px,0px) scale3d(1,1,1);
    }
}
div.scaler span{
    background-color: lightsteelblue; animation-name: scale3D;
}
@keyframes scale3D{
	from{
		transform:scale3d(0,0,0);
		}
		to{
		transform:scale3d(1,1,1);
		}
	}
/* 
    ? scale3d(x축scale, y축scale, z축scale)
    * scale3d는 벡터방식으로 크기 확장을 한다.
    ! 1이 100%의 scale, 0.1 = 10%의 scale
*/