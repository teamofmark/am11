.flexContainer{
    margin: 10px; padding: 15px;
    border-radius: 23px;
    background-color: #a4a4a4;
    display: flex;
}
.flexItem{
    margin: 10px; padding: 20px; color: white;
    text-align: center; border-radius: 27px;
    background-color: black;
}
.flexContainer.direction{
    flex-direction: column-reverse;
    /* 
    flex-direction : 
    flex-direction 속성은 flexContainer의 주축(main axis) 방향을 설정한다.

    row (ltr), row-reverse(rtl), column(TopToBottom), column-reverse(BottomToTop)
    */
}
.flexContainer.wrap{
    flex-wrap: wrap-reverse;
}
/* 
    flex-wrap : 
    flex-wrap 속성은 flexContainer의 width보다 flexItem들의 width의 합계가 더 큰 경우, 한줄로 표현할 것인지, 여러줄로 표현할 것인지를 지정한다. 

    nowrap(개행불허. 1행 모두배치. default. flexItem width 자동축소)
    wrap(width 초과시 개행)
    wrap-reverse(개행하되 역배치)
    
*/
.flexContainer.wrap .flexItem{
    width: 500px;
}

.flexContainer.flow{
    flex-flow: row nowrap;
}
.flexContainer.flow .flexItem{
    width: 500px;
}

.flexContainer.justify{
    justify-content: space-evenly;
    /* 
        justify-content : 
        flex container의 main axis를 기준으로 flexItem을 수평 정렬한다.
        
        flex-start (flexItem을 좌측 기준정렬)
        flex-end (flexItem을 우측 기준정렬)
        center (flexItem을 가운데 기준정렬)
        space-between (flexItem 중 처음은 좌측기준, 마지막은 우측기준, 나머지는 동일간격으로 정렬)
        space-around (모든 flexItem은 기준없이 동일간격으로 정렬)
        space-evenly (여유 공간을 flex 항목 사이의 공간 및 시작선 및 끝선과 flex 항목 간의 공간에 모두 균등하게 배분.)
    */
}

.flexContainer.alignContent{
    height: 400px; 
    align-content: stretch;
    flex-wrap: wrap;
}
/* 
    ! justify와 유사
    align-content: (창조절필요)
    flex container의 cross axis를 기준으로 flexItem을 수직 정렬한다.
    
    stretch (flexItem 행 간격을 균등하게. cross Start에서 End까지 꽉찬 높이.)
    flex-start (flexItem 행 간격 없이 (stack))
    flex-end (flexContainer의 cross end 기준으로 행 간격 없이)
    center (flexContainer의 cross axis 중앙 기준으로 행 간격 없이)
    space-between (첫 행은 flexContainer cross start 기준, 마지막 행은 flexContainer cross end 기준, 나머지 행 균등하게)
    space-around (flexContainer 공간안에 모든 행 균등하게)
*/
.flexContainer.alignContent .flexItem{
    margin: 0; width: 300px;
}

.flexContainer.alignItems{
    height: 200px;
    align-items: flex-end;
}
.flexContainer.alignItems .flexItem:first-of-type{
    line-height: 50px;
}
.flexContainer.alignItems .flexItem:nth-of-type(2){
    line-height: 100px;
}

.flexContainer.justItems{
    justify-items: center;
}
.flexContainer.justItems .flexItem{
    width: 150px;
}
.flexContainer.justItems .flexItem:first-of-type{
    font-size: 30px; 
}

/* !이하 item */

.flexContainer.orderItem .flexItem.order1{
    order: -1;
}
.flexContainer.orderItem .flexItem.order2{
    order: 1;
}
.flexContainer.orderItem .flexItem.order3{
    order: 0;
}

.flexContainer.flexShortHand{
    width: 50%; margin: 0; padding: 0;
}
.flexContainer.flexShortHand .flexItem{
    word-break: break-all;
    margin: 0; padding: 0;
}
.flexContainer.flexShortHand .flexItem:first-child{
    /* *ex.1 grow. 변형확인위해 basis off 
    flex-grow: 2;
    flex-basis: 0;
    */
    /* *ex.2 shrink 
    flex-shrink: 4;
    flex-basis: 150px;
    */
}
.flexContainer.flexShortHand .flexItem:first-child~*{
    /* *ex.1 
    flex-grow: 1;
    flex-basis: 0;
    */
    /* *ex.2 
    flex-shrink: 1;
    flex-basis: 150px;
    */
}
/* 
    ? ex.1 > 만약 전체 너비 (300px)의 item 3개에 개별적 grow
    ? .flexItem:first-child{flex-grow:2} (300/4)*2 = width: 150
    ? .flexItem:first-child~*{flex-grow:1} (300/4)*1 = width: 75

    ? ex.2 ? 만약 수축중인 전체 너비 (300px)의 item 3개에 개별적 shrink(각 width: 150px)
    ? .flexItem:first-child{flex-shrink:4} 150+(-150/6)*4 = width: 50px; 
    ? .flexItem:first-child~*{flex-shrink:1} 150+(-150/6)*1  = width: 125px; 
    */