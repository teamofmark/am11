.flexContainer{
    background-color: #a4a4a4; padding: 15px;
    margin: 10px; display: flex;
}
.flexItem{
    margin: 10px; padding: 20px; color: white;
    text-align: center; background-color: black;
    border-radius: 27px;
}

.flexContainer.direction{
    flex-direction: column-reverse;
    /* 
    flex-direction : 
    flex-direction 속성은 flexContainer의 주축(main axis) 방향을 설정한다.

    row (ltr), row-reverse(rtl), column(TopToBottom), column-reverse(BottomToTop)
    */
}
.flexContainer.wrap{
    flex-wrap: wrap-reverse;
    /* 
        flex-wrap:
        *flex-wrap 속성은 flexContainer의 width보다 flexItem들의 width의 합이 더 큰 경우,
        *한줄로 처리 할 것인지, 여러줄로 처리 할 것인지 결정 가능.
        ? nowrap : 개행불허. 1행 모두 배치. (width를 가변시킨다.)
        ? wrap : 초과시 개행.
        ? wrap-reverse : 초과시 개행 하되 역배치.
    */
}
.flexContainer.wrap .flexItem{
    width: 500px;
}


.flexContainer.flow{
    flex-flow: row-reverse wrap-reverse;
    /* 
        flex-flow : direction과 wrap을 줄여 쓸 수 (shorthand) 있다.
        ?<flex-direction> | <flex-wrap>;
    */
}
.flexContainer.flow .flexItem{
    width: 500px;
}

.flexContainer.justifyContent{
    padding: 0;
    justify-content: space-evenly;
    /* 
        ? justify-content:
        * flexContainer의 mainAxis를 기준으로 flexItem을 수평정렬한다.
        * flex-start : (flexItem을 좌측 기준 정렬)
        * center : (flexItem을 가운데 기준 정렬)
        * flex-end : (flexItem을 우측 기준 정렬)
        
        *space-between: (flexItem중 처음은 좌측기준, 마지막은 우측기준, 나머지는 동일간격)
        *space-around: (모든 flexItem의 기준을 없앤 상태로 동일 간격 정렬.)
        *space-evenly: (여유공간을 flex 항목 사이의 공간,시작선,끝선과 flex 항목간의 공간에 모두 균등하게 배분.)
    */
}
.flexContainer.justifyContent .flexItem{
    margin: 0; 
}