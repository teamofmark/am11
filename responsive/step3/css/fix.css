/* 변수선언 
@ColumnWidth: 60px;
@GutterWidth: 20px;
*/
/* 믹스인 
.span(@column){
    width:(@ColumnWidth * @column) + (@GutterWidth * (@column - 1));
}
 .span_1{.span(1);}
.span_2{.span(2);}
.span_3{.span(3);}
.span_4{.span(4);}
.span_5{.span(5);}
.span_6{.span(6);}
.span_7{.span(7);}
.span_8{.span(8);}
.span_9{.span(9);}
.span_10{.span(10);}
.span_11{.span(11);}
.span_12{.span(12);} 
*/
.container{
    width: 960px; margin: 0 auto;
}
.row{
    overflow: hidden; margin-left: 10px; margin-right: 10px;
}
div[class*='span']{
    float: left;
}
.span_1 {
    width: 60px;
  }
  .span_2 {
    width: 140px;
  }
  .span_3 {
    width: 220px;
  }
  .span_4 {
    width: 300px;
  }
  .span_5 {
    width: 380px;
  }
  .span_6 {
    width: 460px;
  }
  .span_7 {
    width: 540px;
  }
  .span_8 {
    width: 620px;
  }
  .span_9 {
    width: 700px;
  }
  .span_10 {
    width: 780px;
  }
  .span_11 {
    width: 860px;
  }
  .span_12 {
    width: 940px;
  }

  /* 
    ? less 를 이용한 grid(정적) Style변환.
    * 1. 전체 너비는 정해져있다.(임의지정 : 12로 나누었을 때 딱 떨어지는 값.) > 채울 grid 필요.
    * columnWidth : 60px, gutterWidth : 20px -> 80px. 80px * 12 = 960.(containerWidth).
    * 이 근거를 가지고 각 column의 너비 계산.
    ! ex> width = (columnWidth * column) + (gutterWidth * (column - 1));
    ? -1? : 각 행의 첫번째 gutter는 불필요. 삭제.
    ? 그렇게 남는 gutterWidth 20px 은 row가 좌,우로 10px씩 가져감.
    * 정적그리드(960px) 완성 
  */